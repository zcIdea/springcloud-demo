spring:
  application:
    name: comsume-server # 在eureka中此值作为vipaddress,在发现服务时使用
  boot:
    admin:
      client:
        url: http://localhost:8769
#  cloud:
#    gateway:
#      routes:
#      - id: neo_route
#        uri: http://www.ityouknow.com
#        predicates:
#        - Path=/spring-cloud

server:
  port: 8767
logging:
  level:
    root: info
# eureka注册中心
eureka:
  client:
    #表示eureka client间隔多久去拉取服务器注册信息,默认为30秒
    registry-fetch-interval-seconds: 30
    service-url:
      defaultZone: http://localhost:8761/eureka/    #获取服务地址
  #      defaultZone:  http://peer1:8761/eureka/,http://peer2:8762/eureka/ #服务中心，获取多个
  instance:
    #eureka客户端需要多长时间发送心跳给eureka服务器，表明他仍然或者，默认30秒
    lease-renewal-interval-in-seconds: 5
    #eureka服务器在接受到实力的最后一次发出的心跳后，需要等待多久才可以将此实力删除,默认90秒
    lease-expiration-duration-in-seconds: 10
    metadata-map:
      company-name: eureka


# Feign设置超时时间
#  使用Feign调用接口分两层，ribbon的调用和hystrix的调用，所以ribbon的超时时间和Hystrix的超时时间的结合就是Feign的超时时间
#  一般情况下 都是 ribbon 的超时时间（<）hystrix的超时时间（因为涉及到ribbon的重试机制）
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 5000  #hystrix的超时时间

ribbon:
  ReadTimeout: 5000
  ConnectTimeout: 5000  #ribbon的超时时间

#启动feign的hystrix的功能，降级容错fallback
feign:
  hystrix:
    enabled: true
  client:
    config:
      default:
        connectTimeout: 10000 # feign 的超时设置
        readTimeout: 10000

#配置服务提供方的ip地址（自定义），feign的@FeignClient中使用
provider:
  url: http://127.0.0.1:8768