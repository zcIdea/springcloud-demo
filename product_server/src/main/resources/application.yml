spring:
  application:
    name: product-server # 在eureka中此值作为vipaddress,在发现服务时使用
  boot:
    admin:
      client:
        url: http://localhost:8769 #获取监控器admin的服务地址
  datasource:                      # mySql
    url: jdbc:mysql://10.2.12.35:3306/test?useUnicode=true&characterEncoding=UTF8&useSSL=false
    username: fxjyadmin
    password: root
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource  #数据库连接池druid
    druid:
      #初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时 default:0
      initial-size: 1
      #最大连接池数量。default=8+
      max-active: 20
      #最小连接池数量。maxIdle已经废弃
      min-idle: 1
      #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁
      max-wait: 60000
      #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，会存在Oracle下PSCache占用内存过多的问题，可以把这个数据配置大一些，比如100.default=-1
      max-pool-prepared-statement-per-connection-size: 20
      #是否缓存preparedStatement,也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。default=false
      pool-prepared-statements: false
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 default=1分钟 #有两个含义：
      # (1)Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接
      # (2)testWhileIdle的判断依据，详细看testWhileIdle属性的说明
      time-between-eviction-runs-millis: 60000
      #池中的连接保持空闲而不被驱逐的最小时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      #用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null,testOnBorrow,testOnBorrow,testOnReturn,testWhileIdle都不会起作用。这个可以不配置
      validation-query: select 1 from dual
      #建议配置为true,不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。default=false
      test-while-idle: true
      #申请连接时执行validationQuery检测连接是否有效,做了这个配置会降低性能。default=true
      test-on-borrow: true
      #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。default=false
      test-on-return: true
      #druid监控配置信息配置，这里写了配置类，这里就不用写了
  redis:
#    host: 10.2.12.117  # Redis服务器地址
#    port: 6380         # Redis服务器连接端口
    host: 127.0.0.1    # Redis服务器地址
    port: 6379         # Redis服务器连接端口
    timeout: 3000      # 连接超时时间（毫秒）
    lettuce:
      pool:
        max-active: 8  # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1   # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 8    # 连接池中的最大空闲连接
        min-idle: 0    # 连接池中的最小空闲连接
  cache:
    cache-names: c1    # 缓存的名字
  data:
    mongodb:
      host: 10.3.100.175
      port: 27017
      database: runoob

server:
  port: 8768
#spring:
#  datasource:
#    platform: h2
#    schema: classpath:schema.sql
#    data: classpath:data.sql
#  jpa:
#    generate-ddl: false
#    show-sql: true
#    hibernate:
#      ddl-auto: none
logging:
  level:
    root: info
    org.hibernate: info


eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
#      defaultZone:  http://peer1:8761/eureka/,http://peer2:8762/eureka/

#看到所有支持的状态查询，需要配置
#访问路径 http://localhost:8761/actuator  http://localhost:8761/actuator/health
management:
  endpoints:
    web:
      exposure:
        include: "*" # * 在yaml 文件属于关键字
  endpoint:
    health:
      show-details: always  #显示所有健康状态
# mybatis配置
mybatis:
  configuration:
    map-underscore-to-camel-case: true
  mapper-locations: classpath:mapper/*Mapper.xml
  type-aliases-package: com.chuan.demo.entity
#  type-handlers-package:

#zuul路由配置
#这里的配置表示，访问/it/** 直接重定向到http://www.ityouknow.com/**
#zuul.routes.baidu.path=/it/**
#zuul.routes.baidu.url=http://www.ityouknow.com/
zuul:
  routes:                             # zuul.routes 是固定的
    baidu:                            # baidu 是可以随便写的，但最好根据要路由的服务取
      path: "/it/**"
      url: http://www.ityouknow.com/

# 自定义启动器
test:
  service:
    enable: true
    config: a,b,c,d,1,2,3